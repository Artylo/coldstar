<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_circle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

set_random_color();
set_scale(random(5));
set_name();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables

//Ranges
range = sprite_width*scale/4*1.5;
MouseDist = point_distance(x,y,mouse_x,mouse_y);
MouseDir = point_direction(x,y,mouse_x,mouse_y);

//Movement
SpeedMod = 1/scale/2;

//Orbit
orbitdir = choose(-1,1);
nearsun = instance_nearest(x,y,o_sun);
nearsundir = point_direction(x,y,nearsun.x,nearsun.y);
nearsundist = point_distance(x,y,nearsun.x,nearsun.y);

monorbit = point_distance(mouse_x,mouse_y,nearsun.x,nearsun.y);
monorbitb = 8;

pullmod = 20*scale;

//Info
yearspeed = (640-nearsundist)*SpeedMod/400*orbitdir;
dayspeed = 360/SpeedMod/room_speed;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Satellites
satellites = irandom(5);
for(var i = 1; i &lt;= satellites; i++)
{
    instance_create(x,y+i*scale,o_satellite)
}
range = satellites*scale*8;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation

depth = -y;

//Rotation
image_angle += SpeedMod*orbitdir;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables

MouseDist = point_distance(x,y,mouse_x,mouse_y);
MouseDir = point_direction(x,y,mouse_x,mouse_y);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inputs

LMB = mouse_check_button(mb_left);
RMB = mouse_check_button(mb_right);

monorbit = point_distance(mouse_x,mouse_y,nearsun.x,nearsun.y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attract and Detract

/*
//LMB
if(LMB)
{
    if(MouseDist &lt;= range &amp;&amp; MouseDist &gt;= 1)
    {
        motion_add(MouseDir,Speed*pullmod);
    }
}

//RMB
if(RMB)
{
    if(MouseDist &lt;= range)
    {
        motion_add(MouseDir+180,Speed*pullmod);
    }
}

//Speed Control
if(speed &gt; MaxSpeed) speed = MaxSpeed*(pullmod/2);
friction = 0.01*SpeedMod*pullmod;
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Orbit

nearsun = instance_nearest(x,y,o_sun);
nearsundir = point_direction(x,y,nearsun.x,nearsun.y);
nearsundist = point_distance(x,y,nearsun.x,nearsun.y);

yearspeed = nearsundist/((640-nearsundist)*SpeedMod/400*orbitdir);
yearspeed = round(yearspeed);
if(yearspeed &lt; 0) yearspeed *= -1;

orbit(nearsun.x,nearsun.y,nearsundist,(640-nearsundist)*SpeedMod/400*orbitdir);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_geometry">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision
//motion_add(point_direction(x,y,other.x,other.y)+180,Speed*pullmod/room_speed);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Info

if(monorbit &gt; nearsundist-monorbitb &amp;&amp; monorbit &lt; nearsundist+monorbitb)
{
    draw_set_color(c_lc);    
    //Name
    draw_text(window_mouse_get_x()-string_width(name)/2,window_mouse_get_y()-string_height(name),name);
    
    //Year Speed
    var year = "Year: " + string(yearspeed) + " days";
    draw_text(window_mouse_get_x()-string_width(year)/2,window_mouse_get_y()-string_height(year)*2,year);
    
    //Size
    var size = "Size: " + string(scale) + "x earth";
    draw_text(window_mouse_get_x()-string_width(size)/2,window_mouse_get_y()-string_height(size)*3,size);
    
    //Day Speed
    var day = "Day: " + string(dayspeed) + "h";
    draw_text(window_mouse_get_x()-string_width(day)/2,window_mouse_get_y()-string_height(day)*4,day);
    
    //Satellites
    var sat = "Satellites: " + string(satellites);
    draw_text(window_mouse_get_x()-string_width(sat)/2,window_mouse_get_y()-string_height(sat)*5,sat);
    
    //Image
    draw_sprite_ext(s_circle,0,window_mouse_get_x(),window_mouse_get_y()+sprite_height,scale,scale,image_angle,c_c,0.3);
}
draw_set_color(c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Range Circle

draw_set_alpha(0.06);
draw_circle_color(x,y,range,c_dc,c_c,false);
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Orbit
if(instance_exists(nearsun))
{
    draw_set_alpha(0.15);
    draw_circle_color(nearsun.x,nearsun.y,nearsundist,c_c,c_c,true);
    draw_set_alpha(1);
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Line

if(monorbit &gt; nearsundist-monorbitb &amp;&amp; monorbit &lt; nearsundist+monorbitb)
{
    draw_line_width_color(x,y,mouse_x,mouse_y,scale,c_c,c_dc);
}
draw_set_alpha(0.1);
draw_line_width_color(x,y,nearsun.x,nearsun.y,scale,c_c,c_dc);
draw_set_alpha(1);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW SELF
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
